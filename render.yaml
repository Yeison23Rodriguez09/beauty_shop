# render.yaml - Coloca este archivo en la raíz de tu proyecto

services:
  # 1. El Servidor Web (Tu aplicación Django)
  - type: web
    name: beauty-shop # El nombre de tu app
    env: python # El entorno de ejecución
    plan: free # Puedes cambiarlo a un plan de pago si necesitas más potencia
    branch: main # O la rama que quieras desplegar (ej. master)

    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --no-input
      python manage.py migrate
    startCommand: "gunicorn config.wsgi:application"

    healthCheckPath: / # Ruta que Render usará para saber si tu app está viva

    envVars:
      - key: PYTHON_VERSION
        value: 3.11.4 # Asegúrate que sea la misma versión que usas localmente
      - key: SECRET_KEY
        generateValue: true # Render creará una clave segura automáticamente
      - key: DEBUG
        value: false
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: postgres-db # El nombre que le damos a la BD abajo
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-cache # El nombre que le damos a Redis abajo

  # 2. El Worker para Tareas en Segundo Plano (Celery)
  - type: worker
    name: beauty-shop-worker
    env: python
    plan: free
    branch: main

    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery -A config.celery worker --loglevel=info"

    envVars:
      - key: PYTHON_VERSION
        value: 3.11.4
      - key: SECRET_KEY
        fromService:
          name: beauty-shop
          type: web
          envVarKey: SECRET_KEY
      - key: DEBUG
        value: false
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: postgres-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-cache
          property: connectionString

# Definición de los servicios de base de datos que usaremos
databases:
  # 3. La Base de Datos PostgreSQL
  - name: postgres-db
    plan: free

  # 4. El Cache/Broker de Redis para Celery
  - name: redis-cache
    plan: free
    maxmemoryPolicy: allkeys-lru # Política recomendada para usar Redis como caché
